[package]
name = "samosbor-client"
version = "0.1.0"
authors = [ "Sergey Ukolov <zezic51@yandex.ru>"
          , "Artem Kanev <a-kanev@yandex.ru>"]
edition = "2018"
description = "Sandboxed roguelike in dark Samosbor setting."
license = "Super Secret License"

[lib]
crate-type = ["cdylib", "rlib"]

[features]
default = ["console_error_panic_hook"]

[dependencies]
wasm-bindgen = "0.2.63"
js-sys = "0.3"
serde = {version = "1.0", features = ["derive"] }
serde_json = "1.0"
legion = { version = "0.3.1", default-features = false, features = ["wasm-bindgen"]}
samosbor-core = { package = "samosbor-core", path = "../samosbor-core" }

# The `console_error_panic_hook` crate provides better debugging of panics by
# logging them with `console.error`. This is great for development, but requires
# all the `std::fmt` and `std::panicking` infrastructure, so isn't great for
# code size when deploying.
console_error_panic_hook = { version = "0.1.6", optional = true }

# `wee_alloc` is a tiny allocator for wasm that is only ~1K in code size
# compared to the default allocator's ~10K. It is slower than the default
# allocator, however.
#
# Unfortunately, `wee_alloc` requires nightly Rust when targeting wasm for now.
wee_alloc = { version = "0.4.5", optional = true }

[dependencies.web-sys]
version = "0.3"
features = [
  "console"
]

[dev-dependencies]
wasm-bindgen-test = "0.3.13"

[profile.release]
# Tell `rustc` to optimize for small code size.
opt-level = "s"

[package.metadata.wasm-pack.profile.release]
wasm-opt = false
